version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: wb_postgres
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: orders_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wb_network

  # Zookeeper для Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: wb_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - wb_network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: wb_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    networks:
      - wb_network

  # Kafka UI (опционально, для удобства разработки)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: wb_kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - wb_network

  api:
    build: .
    container_name: wb_api
    ports:
      - "8081:8081"
    environment:
      - CONFIG_PATH=/app/config/config.yaml
      - DB_CONNECTION_STRING=postgres://orders_user:orders_pass@postgres:5432/orders_db?sslmode=disable
      - DB_HOST=postgres
      - DB_USER=orders_user
      - DB_PASSWORD=orders_pass
      - DB_NAME=orders_db
      - KAFKA_BROKERS=kafka:9092
    volumes:
      - ./config:/app/config
    depends_on:
      - postgres
      - kafka
    networks:
      - wb_network

volumes:
  postgres_data:

networks:
  wb_network:
    driver: bridge