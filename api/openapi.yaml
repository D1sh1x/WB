openapi: 3.0.3
info:
  title: WB Orders API
  version: 1.0.0
servers:
  - url: http://localhost:8081
paths:
  /health:
    get:
      summary: Healthcheck
      responses:
        '200':
          description: OK
  /order:
    get:
      summary: Get all orders (from cache or DB)
      responses:
        '200':
          description: List of orders
    post:
      summary: Create order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Created
    put:
      summary: Update order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_uid:
                  type: string
      responses:
        '200':
          description: Deleted
  /order/{id}:
    get:
      summary: Get order by UID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Not found
components:
  schemas:
    CreateOrderRequest:
      type: object
      required: [track_number, entry, customer_id, delivery, payment, items]
      properties:
        track_number: { type: string }
        entry: { type: string }
        customer_id: { type: string }
        delivery:
          type: object
          required: [name, phone, zip, city, address]
          properties:
            name: { type: string }
            phone: { type: string }
            zip: { type: string }
            city: { type: string }
            address: { type: string }
            region: { type: string }
            email: { type: string }
        payment:
          type: object
          required: [transaction, currency, provider, amount, payment_dt]
          properties:
            transaction: { type: string }
            request_id: { type: string }
            currency: { type: string }
            provider: { type: string }
            amount: { type: integer }
            payment_dt: { type: integer }
            bank: { type: string }
            delivery_cost: { type: integer }
            goods_total: { type: integer }
            custom_fee: { type: integer }
        items:
          type: array
          items:
            type: object
            required: [chrt_id, track_number, price, rid, name, total_price, nm_id, brand, status]
            properties:
              chrt_id: { type: integer }
              track_number: { type: string }
              price: { type: integer }
              rid: { type: string }
              name: { type: string }
              sale: { type: integer }
              size: { type: string }
              total_price: { type: integer }
              nm_id: { type: integer }
              brand: { type: string }
              status: { type: integer }
    UpdateOrderRequest:
      allOf:
        - $ref: '#/components/schemas/CreateOrderRequest'
        - type: object
          required: [order_uid]
          properties:
            order_uid: { type: string }
    OrderResponse:
      type: object
      properties:
        order_uid: { type: string }
        track_number: { type: string }
        entry: { type: string }
        locale: { type: string }
        customer_id: { type: string }
        delivery_service: { type: string }
        shardkey: { type: string }
        sm_id: { type: integer }
        date_created: { type: string, format: date-time }
        oof_shard: { type: string }
        delivery:
          $ref: '#/components/schemas/CreateOrderRequest/properties/delivery'
        payment:
          $ref: '#/components/schemas/CreateOrderRequest/properties/payment'
        items:
          $ref: '#/components/schemas/CreateOrderRequest/properties/items'


